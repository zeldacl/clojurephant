buildscript {
  repositories {
    gradlePluginPortal()
    mavenLocal()
  }
  dependencies {
    classpath 'dev.clojurephant:clojurephant-plugin:latest.integration'
  }
}

apply plugin: 'dev.clojurephant.clojure'
apply plugin: 'dev.clojurephant.clojurescript'

repositories {
  mavenCentral()
  maven {
    name = 'clojars'
    url = 'https://repo.clojars.org'
  }
  mavenLocal()
}

dependencies {
  // clojure
  implementation 'org.clojure:clojure:1.10.0'
  implementation 'org.clojure:clojurescript:1.10.520'

  // testing
  testImplementation 'junit:junit:4.12'

  // frontend
  implementation 'org.omcljs:om:1.0.0-beta4'
  devImplementation 'devcards:devcards:0.2.6'
}

clojureRepl {
  port = 7888
}

clojurescript {
  builds {
    all {
      compiler {
        outputDir = "public/js/${name}-out"
        assetPath = "js/${name}-out"
      }
    }
    main {
      compiler {
        outputTo = 'public/js/main.js'
        sourceMap = 'public/js/main.js.map'
        optimizations = 'advanced'
        main = 'sample.main'
      }
    }
    dev {
      compiler {
        outputTo = 'public/js/main.js'
        main = 'sample.main'
        preloads = ['sample.dev', 'devtools.preload']
      }
    }
    cards {
      sourceSet.set(sourceSets.dev)
      compiler {
        preloads = ['sample.dev', 'devtools.preload']
        outputTo = 'public/js/cards.js'
        main = 'sample.cards'
        devcards = true
      }
    }
    mods {
      sourceSet.set(sourceSets.dev)
      compiler {
        preloads = ['sample.dev', 'devtools.preload']
        devcards = true
        module('main') {
          outputTo = 'public/js/main.js'
          entries = ['sample.main']
          dependsOn = ['cljs-base']
        }
        module('cards') {
          outputTo = 'public/js/cards.js'
          entries = ['sample.cards']
          dependsOn = ['cljs-base']
        }
      }
    }
  }
}
