plugins {
  id 'java'
  id 'dev.clojurephant.clojure'
  id 'maven-publish'
  id 'org.ajoberstar.stutter'
  id 'java-gradle-plugin'
  id 'com.gradle.plugin-publish'
}

dependencies {
  // gradle
  compileOnly gradleApi()

  // edn support
  implementation 'us.bpsm:edn-java:0.6.0'

  // util
  implementation 'org.apache.commons:commons-text:1.6'

  // compat testing
  compatTestImplementation gradleTestKit()
  compatTestImplementation 'org.clojure:clojure:1.10.0'
  compatTestImplementation 'org.clojure:tools.namespace:1.0.0'
  compatTestImplementation 'nrepl:nrepl:0.6.0'
  compatTestImplementation 'junit:junit:4.12'
  compatTestImplementation 'org.ajoberstar:ike.cljj:0.4.1'
}

task writeProperties(type: WriteProperties) {
  outputFile = "${buildDir}/clojurephant.properties"
  property 'version', version
}

processResources {
  from writeProperties
}

stutter {
  sparse = true
  java(8) {
    compatibleRange '5.0'
  }
  java(14) {
    compatibleRange '6.3'
  }
}

plugins.withId('eclipse') {
  eclipse.classpath.plusConfigurations += [configurations.compatTestCompileClasspath]
}

sourceSets.compatTest.runtimeClasspath = files(compileCompatTestClojure, sourceSets.compatTest.runtimeClasspath)

compileCompatTestClojure {
  namespaces.add 'dev.clojurephant.tools.logger'
  namespaces.add 'dev.clojurephant.tools.clojure-test-junit4'
}

tasks.withType(Test).matching { it.name.startsWith('compatTest') }.all {
  dependsOn ':clojurephant-tools:publishToMavenLocal'

  testClassesDirs = files(compileCompatTestClojure, sourceSets.compatTest.output)

  inputs.dir 'src/compatTest/projects'
  systemProperty 'clojure.test.dirs', 'src/compatTest/clojure'
  systemProperty 'stutter.projects', 'src/compatTest/projects'
  systemProperty 'org.gradle.testkit.dir', file('build/stutter-test-kit').absolutePath
}

publishing {
  publications {
    pluginMaven(MavenPublication) {
      artifact sourcesJar
    }
  }
}

gradlePlugin {
  plugins {
    clojureBase {
      id = 'dev.clojurephant.clojure-base'
      implementationClass = 'dev.clojurephant.plugin.clojure.ClojureBasePlugin'
    }
    clojure {
      id = 'dev.clojurephant.clojure'
      implementationClass = 'dev.clojurephant.plugin.clojure.ClojurePlugin'
    }
    clojurescriptBase {
      id = 'dev.clojurephant.clojurescript-base'
      implementationClass = 'dev.clojurephant.plugin.clojurescript.ClojureScriptBasePlugin'
    }
    clojurescript {
      id = 'dev.clojurephant.clojurescript'
      implementationClass = 'dev.clojurephant.plugin.clojurescript.ClojureScriptPlugin'
    }
  }
}

pluginBundle {
  website = 'https://clojurephant.dev/'
  vcsUrl = 'https://github.com/clojurephant/clojurephant.git'
  description = 'Clojure and ClojureScript language support for Gradle'
  plugins {
    clojureBase {
      id = 'dev.clojurephant.clojure-base'
      displayName = 'Clojure base language plugin for Gradle'
      tags = ['clojure', 'language']
    }
    clojure {
      id = 'dev.clojurephant.clojure'
      displayName = 'Clojure language plugin for Gradle'
      tags = ['clojure', 'language']
    }
    clojurescriptBase {
      id = 'dev.clojurephant.clojurescript-base'
      displayName = 'ClojureScript base language plugin for Gradle'
      tags = ['clojurescript', 'language']
    }
    clojurescript {
      id = 'dev.clojurephant.clojurescript'
      displayName = 'ClojureScript language plugin for Gradle'
      tags = ['clojurescript', 'language']
    }
  }
  mavenCoordinates {
    groupId = project.group
    artifactId = project.name
    version = project.version
  }
}
